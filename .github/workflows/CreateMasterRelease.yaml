# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CreateMasterRelease

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:    
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-go@v1
      with:
        go-version: '1.14.2' # The Go version to download (if necessary) and use.
    - run: go build -o ./gdz.exe -i ./cmd/gdz/main.go
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./gdz.exe
        asset_name: gdz-${{ github.ref }}-amd64-win.exe
        asset_content_type: application/octet-stream

